{"version":3,"sources":["webpack:///src/app/pages/login/login.page.html","webpack:///src/app/pages/login/login-routing.module.ts","webpack:///src/app/pages/login/login.module.ts","webpack:///src/app/pages/login/login.page.scss","webpack:///src/app/pages/login/login.page.ts"],"names":["routes","path","component","LoginPageRoutingModule","imports","forChild","exports","LoginPageModule","declarations","LoginPage","formBuilder","router","toastController","af","alert","loading","alertService","platform","loginService","countryCodeService","showCodeInput","otpSent","countryCode","getCountryCode","phone","group","inputNumber","compose","minLength","required","code","recaptchaVerifier","RecaptchaVerifier","size","option","values","authState","subscribe","user","subscription","backButton","navigator","exitApp","show","console","log","countryCodes","phoneNumber","signInWithPhoneNumber","then","result","hidePro","comfirmationResult","optSentToast","error","showErrorMessage","confirm","otp","loginPhoneNumber","hide","create","message","buttons","text","role","cssClass","handler","next","present","header","ResendCode","duration","position","toast","selector","template"],"mappings":"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","file":"pages-login-login-module-es5.js","sourcesContent":["export default \"<ion-content class=\\\"ion-padding\\\">\\n    <div id=\\\"recaptcha-container\\\" style=\\\"display: none;\\\"></div>\\n\\n    <div *ngIf=\\\"!otpSent\\\">\\n        <div class=\\\"label\\\">\\n            <ion-label>Enter your phone number</ion-label>\\n        </div>\\n        <div>\\n            <p class=\\\"p\\\">\\n                WhatsApp will send an SMS message to verify your phone number.\\n                <span style=\\\"color: rgb(98, 98, 243);\\\">What's my number?</span>\\n            </p>\\n        </div>\\n        <div style=\\\"margin: 20px;\\\">\\n            <div class=\\\"input\\\">\\n                <form [formGroup]=\\\"phone\\\">\\n                    <ion-item lines=\\\"none\\\" style=\\\"text-align: center;\\\">\\n                        <ion-select placeholder=\\\"code\\\" formControlName=\\\"code\\\" [(ngModel)]=\\\"countryCodes\\\">\\n                            <ion-label style=\\\"font-size: smaller;\\\">SELECT YOUR COUNTRY</ion-label>\\n                            <ion-select-option *ngFor=\\\"let code of countryCode\\\">{{code.dial_code}}\\n                            </ion-select-option>\\n                        </ion-select>\\n                        <ion-input [(ngModel)]=\\\"phoneNumber\\\" type=\\\"text\\\" style=\\\"text-align: start;\\\" formControlName=\\\"inputNumber\\\"\\n                            placeholder=\\\"8034524290\\\"></ion-input>\\n                    </ion-item>\\n                </form>\\n                <hr>\\n                <div>\\n                    <p style=\\\"text-align: center;\\\">\\n                        Carrier SMS changes may apply\\n                    </p>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"button\\\">\\n            <ion-button expand=\\\"block\\\" (click)=\\\"presentAlertConfirm()\\\" [disabled]=\\\"!phone.valid\\\">\\n                NEXT\\n            </ion-button>\\n        </div>\\n    </div>\\n\\n    <div *ngIf=\\\"otpSent\\\">\\n        <div class=\\\"label\\\">\\n            <ion-label>Verify {{phoneNumber}}</ion-label>\\n        </div>\\n        <div>\\n            <p class=\\\"p\\\">\\n                Waiting to automatically detect an SMS sent to {{phoneNumber}}\\n                <span style=\\\"color: rgb(98, 98, 243);\\\" (click)=\\\"clear()\\\">Wrong number?</span>\\n            </p>\\n        </div>\\n        <div style=\\\"margin: 20px;\\\">\\n            <div class=\\\"input\\\">\\n                <ion-item lines=\\\"none\\\" style=\\\"text-align: center;\\\">\\n                    <ion-input placeholder=\\\"-- -- -- -- -- -- \\\" [(ngModel)]=\\\"otp\\\"></ion-input>\\n                </ion-item>\\n                <hr class=\\\"hr\\\">\\n                <div>\\n                    <p style=\\\"text-align: center;\\\">\\n                        Enter 6-digit code\\n                    </p>\\n                </div>\\n            </div>\\n        </div>\\n        <ion-item (click)=\\\"ResendSMS()\\\" style=\\\"padding-bottom: 5px;\\\">\\n            <ion-icon name=\\\"chatbox-ellipses\\\" slot=\\\"start\\\"></ion-icon>\\n            <ion-label>Resend SMS</ion-label>\\n        </ion-item>\\n        <ion-item lines=\\\"none\\\" style=\\\"padding-top: 5px;\\\">\\n            <ion-icon name=\\\"call\\\" slot=\\\"start\\\"></ion-icon>\\n            <ion-label>Call me</ion-label>\\n        </ion-item>\\n        <div class=\\\"button\\\">\\n            <ion-button expand=\\\"block\\\" (click)=\\\"initia()\\\">\\n                Verify\\n            </ion-button>\\n        </div>\\n    </div>\\n\\n\\n\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LoginPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPageRoutingModule } from './login-routing.module';\n\nimport { LoginPage } from './login.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n    LoginPageRoutingModule\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","export default \".label {\\n  text-align: center;\\n  font-size: larger;\\n  font-weight: 800;\\n  margin: 15px;\\n  color: #4d9061;\\n}\\n\\n.p {\\n  text-align: center;\\n  font-size: medium;\\n  padding-top: 15px;\\n}\\n\\nhr {\\n  background: #4d9061;\\n}\\n\\n.button {\\n  position: absolute;\\n  left: 0;\\n  right: 0;\\n  margin: 15px;\\n  bottom: 0;\\n}\\n\\nhr.hr {\\n  background: #4d9061;\\n  width: 180px;\\n}\\n\\n.label {\\n  font-size: small;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvbG9naW4vbG9naW4ucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksa0JBQUE7RUFDQSxpQkFBQTtFQUNBLGdCQUFBO0VBQ0EsWUFBQTtFQUNBLGNBQUE7QUFDSjs7QUFFQTtFQUNJLGtCQUFBO0VBQ0EsaUJBQUE7RUFDQSxpQkFBQTtBQUNKOztBQUNBO0VBQ0ksbUJBQUE7QUFFSjs7QUFDQTtFQUNJLGtCQUFBO0VBQ0EsT0FBQTtFQUNBLFFBQUE7RUFDQSxZQUFBO0VBQ0EsU0FBQTtBQUVKOztBQUNBO0VBQ0ksbUJBQUE7RUFDQSxZQUFBO0FBRUo7O0FBQUE7RUFDSSxnQkFBQTtBQUdKIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvbG9naW4vbG9naW4ucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmxhYmVsIHtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIGZvbnQtc2l6ZTogbGFyZ2VyO1xyXG4gICAgZm9udC13ZWlnaHQ6IDgwMDtcclxuICAgIG1hcmdpbjogMTVweDtcclxuICAgIGNvbG9yOiAjNGQ5MDYxO1xyXG4gICAgLy8gZm9udC1mYW1pbHk6IHNhbnMtc2VyaWY7XHJcbn1cclxuLnAge1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgZm9udC1zaXplOiBtZWRpdW07XHJcbiAgICBwYWRkaW5nLXRvcDogMTVweDtcclxufVxyXG5ociB7XHJcbiAgICBiYWNrZ3JvdW5kOiAjNGQ5MDYxO1xyXG59XHJcblxyXG4uYnV0dG9uIHtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIGxlZnQ6IDA7XHJcbiAgICByaWdodDogMDtcclxuICAgIG1hcmdpbjogMTVweDtcclxuICAgIGJvdHRvbTogMDtcclxufVxyXG5cclxuaHIuaHIge1xyXG4gICAgYmFja2dyb3VuZDogIzRkOTA2MTtcclxuICAgIHdpZHRoOiAxODBweDtcclxufVxyXG4ubGFiZWwge1xyXG4gICAgZm9udC1zaXplOiBzbWFsbDtcclxuICB9XHJcbiJdfQ== */\";","/*\n * WhatsApp in Ionic 5 application  (https://github.com/habupagas/ionic-5-WhatsApp)\n * Copyright  @2020-present. All right reserved.\n * Author: Abubakar Pagas\n */\n\nimport { CountryCodeService } from \"./../../services/country-code.service\";\nimport { LoginService } from \"./../../services/login.service\";\nimport { AlertService } from \"./../../services/alert.service\";\nimport { LoadingService } from \"./../../services/loading.service\";\nimport { AngularFireAuth } from \"@angular/fire/auth\";\nimport { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport * as firebase from \"firebase\";\nimport { AlertController, ToastController, Platform } from \"@ionic/angular\";\nimport {\n  FormBuilder,\n  FormGroup,\n  FormControl,\n  Validators,\n} from \"@angular/forms\";\n// import { FirebaseX } from \"@ionic-native/firebase-x/ngx\";\n\n@Component({\n  selector: \"app-login\",\n  templateUrl: \"./login.page.html\",\n  styleUrls: [\"./login.page.scss\"],\n})\nexport class LoginPage implements OnInit {\n  option;\n  values;\n  showCodeInput = false;\n  phoneNumber;\n  otpSent = false;\n  otp: any;\n  countryCode;\n  // compareWith\n  // selectedCode;\n  countryCodes;\n  userData: any;\n  public phone: FormGroup;\n\n  recaptchaVerifier;\n  comfirmationResult: firebase.auth.ConfirmationResult;\n  subscription: any;\n\n  // compareWith = compareWithFn;\n\n  constructor(\n    public formBuilder: FormBuilder,\n    private router: Router,\n    private toastController: ToastController,\n    // private fb: FirebaseX,\n    public af: AngularFireAuth,\n    private alert: AlertController,\n    private loading: LoadingService,\n    private alertService: AlertService,\n    private platform: Platform,\n    private loginService: LoginService,\n    public countryCodeService: CountryCodeService\n  ) {\n    this.countryCode = this.countryCodeService.getCountryCode();\n    this.phone = this.formBuilder.group({\n      inputNumber: new FormControl(\n        \"\",\n        Validators.compose([Validators.minLength(6), Validators.required])\n      ),\n      code: new FormControl(\n        \"\",\n        Validators.compose([Validators.minLength(1), Validators.required])\n      ),\n    });\n  }\n\n  // seletedCode(item){\n  //   this.countryCodes = item.dial_code\n  //   console.log(\"country code\", item)\n  // }\n\n  ngOnInit() {\n    this.recaptchaVerifier = new firebase.auth.RecaptchaVerifier(\n      \"recaptcha-container\",\n      { size: \"invisible\" }\n    );\n    this.option = this.values;\n  }\n\n  ionViewDidEnter() {\n    this.af.authState.subscribe((user) => {\n      if (user) {\n        this.subscription = this.platform.backButton.subscribe(() => {\n          navigator[\"app\"].exitApp();\n        });\n      }\n    });\n  }\n\n  // proceed to the next step\n  async next() {\n    this.loading.show();\n    console.log(\"this.countryCodes ===>\", this.countryCodes);\n    console.log(\"this.phoneNumber ===>\", this.phoneNumber);\n    console.log(\"this.recaptchaVerifier ===>\", this.recaptchaVerifier);\n    this.af\n      .signInWithPhoneNumber(\n        this.countryCodes + this.phoneNumber,\n        this.recaptchaVerifier\n      )\n      .then((result) => {\n        console.log(\"signInWithPhoneNumber ====>\", result);\n        // this.phoneNumber = phone\n        this.loading.hidePro();\n        this.comfirmationResult = result;\n        this.otpSent = true;\n        this.optSentToast(\"Your OTP have been sent.\");\n      })\n      .catch((error) => {\n        let code = error[\"code\"];\n        this.loading.hidePro();\n        this.alertService.showErrorMessage(code);\n        console.log(\"err\", error);\n      });\n  }\n\n  // init the comfrim the code verification code\n  initia() {\n    this.loading.show();\n    this.comfirmationResult\n      .confirm(this.otp)\n      .then(() => {\n        // this.optSentToast('Verification have been verify')\n        this.loginService.loginPhoneNumber(this.phoneNumber);\n      })\n      .catch((error) => {\n        let code = error[\"code\"];\n        this.loading.hide();\n        this.alertService.showErrorMessage(code);\n      });\n  }\n\n  // clear\n  clear() {\n    this.otpSent = false;\n  }\n\n  // Alert to comfirm the number\n  async presentAlertConfirm() {\n    const alert = await this.alert.create({\n      message:\n        \"We will be verifying the phone\" +\n        \"<br>\" +\n        `<strong> ${this.phoneNumber} </strong>` +\n        \"<br>\" +\n        \"<br>\" +\n        \"is this OK, or would you like to edit this number?\",\n      buttons: [\n        {\n          text: \"EDIT\",\n          role: \"cancel\",\n          cssClass: \"secondary\",\n          handler: () => {},\n        },\n        {\n          text: \"Ok\",\n          handler: () => {\n            this.next();\n          },\n        },\n      ],\n    });\n\n    await alert.present();\n  }\n\n  // this handle the resend verification code\n  async ResendSMS() {\n    const alert = await this.alert.create({\n      header: \"Resent!\",\n      message:\n        \"<strong>Do want to resend comfirmation code</strong>\" +\n        this.phoneNumber,\n      buttons: [\n        {\n          text: \"Cancel\",\n          role: \"cancel\",\n          cssClass: \"secondary\",\n          handler: () => {},\n        },\n        {\n          text: \"Okay\",\n          handler: () => {\n            this.ResendCode();\n          },\n        },\n      ],\n    });\n    await alert.present();\n  }\n\n  ResendCode() {\n    this.loading.show();\n    this.af\n      .signInWithPhoneNumber(this.phoneNumber, this.recaptchaVerifier)\n      .then((result) => {\n        this.comfirmationResult = result;\n        this.optSentToast(\"Your OTP have been sent.\");\n        this.loading.hide();\n      })\n      .catch((error) => {\n        let code = error[\"code\"];\n        this.loading.hide();\n        this.alertService.showErrorMessage(code);\n      });\n  }\n\n  async optSentToast(option: string) {\n    const toast = await this.toastController.create({\n      message: option,\n      duration: 2000,\n      position: \"top\",\n    });\n    toast.present();\n  }\n}\n"]}