{"version":3,"sources":["webpack:///src/app/pages/group-info/group-info.page.html","webpack:///src/app/pages/group-info/group-info-routing.module.ts","webpack:///src/app/pages/group-info/group-info.module.ts","webpack:///src/app/pages/group-info/group-info.page.scss","webpack:///src/app/pages/group-info/group-info.page.ts"],"names":["routes","path","component","GroupInfoPageRoutingModule","imports","forChild","exports","GroupInfoPageModule","declarations","GroupInfoPage","actRoute","dataService","camera","angularDb","loading","alertController","alertService","actionSheetController","router","imageService","afstorage","group","groupId","snapshot","paramMap","get","groupPhotoOption","quality","targetHeight","targetWidth","destinationType","DestinationType","DATA_URL","encodingType","EncodingType","JPEG","correctOrientation","allowEdit","members","valueChanges","subscribe","length","getGroupGallery","groups","admin","index","currentUser","uid","isAdmin","forEach","memberId","getUser","member","addUpdateOrRemoveMember","getCurrentUser","user","userId","groupImage","post","Gallery","imageCount","timeline","tempData","unshift","isAdminOrNotAdmin","create","buttons","text","handler","show","splice","update","then","ref","child","push","date","Date","toString","sender","type","message","nikeName","icon","sucess","key","i","hide","showAlert","navigate","role","actionSheet","present","_tempAdmin","indexOf","groupMembers","header","data","object","remove","alert","cssClass","name","setGroupPhotoProfile","PictureSourceType","CAMERA","img","showGroupUpdatedMessage","error","showErrorMessage","PHOTOLIBRARY","deleteConversation","accountsGroups","pipe","navigateByUrl","database","orderByChild","equalTo","once","snap","res","val","store","Object","keys","uploadGroupPhotoMessage","sourceType","Promise","resolve","getPicture","imageData","url","imgBlob","imgURItoBlob","metadata","generateFilename","task","put","snapshotChanges","getDownloadURL","dataURI","binary","atob","split","mimeString","array","charCodeAt","Blob","Uint8Array","possible","charAt","Math","floor","random","selector","template"],"mappings":"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","file":"pages-group-info-group-info-module-es5.js","sourcesContent":["export default \"<ion-header parallax imageUrl=\\\"{{group.img}}\\\" maximumHeight=\\\"350\\\" expandedColor=\\\"#AAA\\\" titleColor=\\\"white\\\">\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button (click)=\\\"addMembers()\\\" *ngIf=\\\"isAdmin\\\">\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"person-add\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n    <ion-title>\\n      <span style=\\\"font-size: 17px;\\n    font-weight: 600;\\n    text-overflow: ellipsis;\\n    letter-spacing: 0.3px;\\n    overflow: hidden;\\n    white-space: nowrap;\\n    display: block;\\\">{{group.name}}</span>\\n    </ion-title>\\n    <span style=\\\"padding-left: 19px;\\\">Created by {{group.createdBy }} , {{ group.dateCreated | moment:'h:mm A'}}</span>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-card (click)=\\\"changeGroupInfoDec()\\\">\\n    <ion-card-header>\\n      <ion-card-title>Add group description</ion-card-title>\\n    </ion-card-header>\\n  </ion-card>\\n\\n  <ion-card (click)=\\\"addMembers()\\\" *ngIf=\\\"isAdmin\\\">\\n    <ion-card-header>\\n      <ion-card-title>Add members</ion-card-title>\\n    </ion-card-header>\\n  </ion-card>\\n\\n  <ion-card (click)=\\\"changeGroupInfoName()\\\">\\n    <ion-card-header>\\n      <ion-card-title>Change group name</ion-card-title>\\n    </ion-card-header>\\n  </ion-card>\\n  <ion-card (click)=\\\"changeGroupInfoPhoto()\\\">\\n    <ion-card-header>\\n      <ion-card-title>Change group photo</ion-card-title>\\n    </ion-card-header>\\n  </ion-card>\\n  <ion-card>\\n    <span style=\\\"padding-left: 10px; color: var(--ion-color-primary); font-size: larger;\\\">Media</span>\\n    <div class=\\\"thumnails\\\">\\n      <div class=\\\"list-thumbnail\\\">\\n        <ion-row>\\n          <ion-col size=\\\"6\\\">\\n            <div class=\\\"img-thumb\\\" *ngFor=\\\"let item of Gallery\\\">\\n              <div class=\\\"profileimage\\\">\\n                <img src=\\\"{{item.message}}\\\" alt=\\\"\\\">\\n              </div>\\n            </div>\\n          </ion-col>\\n        </ion-row>\\n      </div>\\n    </div>\\n  </ion-card>\\n  <ion-card>\\n    <ion-item>\\n      <ion-label>Mute notifications</ion-label>\\n      <ion-toggle slot=\\\"end\\\"></ion-toggle>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label>Custom notifications</ion-label>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label>Media visibility</ion-label>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label>Encryption</ion-label>\\n      <ion-icon color=\\\"secondary\\\" name=\\\"lock-closed\\\" slot=\\\"end\\\"></ion-icon>\\n      <ion-label>Message to this chat and calls are secured with end-to-end encryption. Tap to verify</ion-label>\\n    </ion-item>\\n  </ion-card>\\n\\n  <ion-card>\\n    <ion-list>\\n      <ion-label>\\n        <span style=\\\"padding-left: 10px; color: var(--ion-color-secondary);\\\">{{members}} participate</span>\\n      </ion-label>\\n      <ion-item *ngFor=\\\"let member of groupMembers\\\" (click)=\\\"assignAdmin(member)\\\"\\n        style=\\\"background-color:transparent !important; padding-left:0 !important; margin-left:0 !important;\\\">\\n        <ion-avatar>\\n          <img src=\\\"{{member.img}}\\\">\\n        </ion-avatar>\\n        <ion-label style=\\\"font-weight: 600; padding-left: 10px;\\\">\\n          <span style=\\\"font-size:16px; text-transform: capitalize;\\\">\\n            {{member.nikeName}}\\n          </span>\\n          <span *ngIf=\\\"isAdminOrNotAdmin(member)\\\" style=\\\"float:right;font-size:12px;opacity: 0.7;\\\">\\n            <div class=\\\"adminColor\\\">\\n              Group Admin\\n            </div>\\n          </span>\\n          <span style=\\\"display: flex;margin-top: 6px;\\\">\\n            <span style=\\\"opacity: 0.6;font-size: 13px;margin-left: 2px;\\\">\\n              {{member.description}}\\n            </span>\\n          </span>\\n        </ion-label>\\n      </ion-item>\\n    </ion-list>\\n  </ion-card>\\n\\n\\n  <ion-card>\\n    <ion-button (click)=\\\"exit()\\\" color=\\\"danger\\\" fill=\\\"clear\\\">Exit group\\n      <ion-icon slot=\\\"start\\\" color=\\\"danger\\\" name=\\\"exit-outline\\\"></ion-icon>\\n    </ion-button>\\n  </ion-card>\\n\\n  <ion-card>\\n    <ion-button color=\\\"danger\\\" fill=\\\"clear\\\">Report group\\n      <ion-icon slot=\\\"start\\\" color=\\\"danger\\\" src=\\\"assets/icon/dislike.svg\\\"></ion-icon>\\n    </ion-button>\\n  </ion-card>\\n\\n\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { GroupInfoPage } from './group-info.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: GroupInfoPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class GroupInfoPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\nimport { IonicHeaderParallaxModule } from 'ionic-header-parallax';\n\nimport { GroupInfoPageRoutingModule } from './group-info-routing.module';\n\nimport { GroupInfoPage } from './group-info.page';\nimport { PipesModule } from 'src/app/pipes/pipes.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    PipesModule,\n    IonicHeaderParallaxModule,\n    GroupInfoPageRoutingModule\n  ],\n  declarations: [GroupInfoPage]\n})\nexport class GroupInfoPageModule {}\n","export default \"ion-card {\\n  width: 100%;\\n  margin: 0;\\n  margin-bottom: 10px;\\n  position: relative;\\n  top: 50px;\\n  padding-top: 20px;\\n}\\n\\nion-icon {\\n  font-size: x-large;\\n  padding: 10px;\\n}\\n\\ndiv.profileimage {\\n  display: flex;\\n  flex-flow: row nowrap;\\n  justify-content: center;\\n  align-items: center;\\n}\\n\\ndiv.profileimage img {\\n  height: 6pc;\\n  padding: 2px;\\n}\\n\\n.thumnails {\\n  overflow-x: scroll;\\n  overflow-y: hidden;\\n}\\n\\n.thumnails .list-thumbnail {\\n  height: 100%;\\n  white-space: nowrap;\\n}\\n\\n.thumnails .list-thumbnail .img-thumb {\\n  display: inline-block;\\n}\\n\\n.adminColor {\\n  border: solid 2px var(--ion-color-primary);\\n  border-radius: 6px;\\n  padding: 1px;\\n  color: var(--ion-color-primary);\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvZ3JvdXAtaW5mby9ncm91cC1pbmZvLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUVJLFdBQUE7RUFDQSxTQUFBO0VBQ0EsbUJBQUE7RUFDQSxrQkFBQTtFQUNBLFNBQUE7RUFDQSxpQkFBQTtBQUFKOztBQUdBO0VBQ0ksa0JBQUE7RUFDQSxhQUFBO0FBQUo7O0FBR0E7RUFDSSxhQUFBO0VBQ0EscUJBQUE7RUFDQSx1QkFBQTtFQUNBLG1CQUFBO0FBQUo7O0FBQ0k7RUFDSSxXQUFBO0VBQ0EsWUFBQTtBQUNSOztBQUdBO0VBQ0ksa0JBQUE7RUFDQSxrQkFBQTtBQUFKOztBQUNJO0VBQ0ksWUFBQTtFQUNBLG1CQUFBO0FBQ1I7O0FBQVE7RUFDSSxxQkFBQTtBQUVaOztBQUdBO0VBQ0ksMENBQUE7RUFDQSxrQkFBQTtFQUNBLFlBQUE7RUFDQSwrQkFBQTtBQUFKIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvZ3JvdXAtaW5mby9ncm91cC1pbmZvLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImlvbi1jYXJkIHtcclxuICAgIC8vIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIG1hcmdpbjogMDtcclxuICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICB0b3A6IDUwcHg7XHJcbiAgICBwYWRkaW5nLXRvcDogMjBweDtcclxufVxyXG5cclxuaW9uLWljb24ge1xyXG4gICAgZm9udC1zaXplOiB4LWxhcmdlO1xyXG4gICAgcGFkZGluZzogMTBweDtcclxuICAgIC8vIGNvbG9yOiB2YXIoLS1pb24tY29sb3Itc2Vjb25kYXJ5KTtcclxufVxyXG5kaXYucHJvZmlsZWltYWdlIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWZsb3c6IHJvdyBub3dyYXA7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBpbWcge1xyXG4gICAgICAgIGhlaWdodDogNnBjO1xyXG4gICAgICAgIHBhZGRpbmc6IDJweDtcclxuICAgIH1cclxufVxyXG5cclxuLnRodW1uYWlscyB7XHJcbiAgICBvdmVyZmxvdy14OiBzY3JvbGw7XHJcbiAgICBvdmVyZmxvdy15OiBoaWRkZW47XHJcbiAgICAubGlzdC10aHVtYm5haWwge1xyXG4gICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xyXG4gICAgICAgIC5pbWctdGh1bWIge1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcblxyXG4uYWRtaW5Db2xvciB7XHJcbiAgICBib3JkZXI6IHNvbGlkIDJweCB2YXIoLS1pb24tY29sb3ItcHJpbWFyeSk7XHJcbiAgICBib3JkZXItcmFkaXVzOiA2cHg7XHJcbiAgICBwYWRkaW5nOiAxcHg7XHJcbiAgICBjb2xvcjogdmFyKC0taW9uLWNvbG9yLXByaW1hcnkpO1xyXG59XHJcbiJdfQ== */\";","/*\n* WhatsApp in Ionic 5 application  (https://github.com/habupagas/ionic-5-WhatsApp)\n* Copyright  @2020-present. All right reserved.\n* Author: Abubakar Pagas\n*/\n\n\nimport { AngularFireStorage } from '@angular/fire/storage';\nimport { ImageService } from './../../services/image.service';\nimport { ActionSheetController, AlertController } from '@ionic/angular';\nimport { LoadingService } from './../../services/loading.service';\nimport { DataService } from './../../services/data.service';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport * as _ from 'lodash';\nimport { AngularFireDatabase } from '@angular/fire/database';\nimport { AlertService } from 'src/app/services/alert.service';\nimport { Camera, CameraOptions } from '@ionic-native/camera/ngx';\nimport { take, finalize } from 'rxjs/operators';\nimport * as firebase from 'firebase';\n\n\n\n\n@Component({\n  selector: 'app-group-info',\n  templateUrl: './group-info.page.html',\n  styleUrls: ['./group-info.page.scss'],\n})\nexport class GroupInfoPage implements OnInit {\n\n  private groupId: any;\n  group = <any>{};\n  public groupMembers: any;\n  public alert: any;\n  public user: any;\n  public subscription: any;\n  isAdmin: any;\n  Gallery: any;\n  imageCount: any;\n  members: any;\n  // GroupInfoPage\n  // This is the page where the user can view group information, change group information, add members, and leave/delete group.\n  private groupPhotoOption: CameraOptions;\n\n\n  constructor(\n    private actRoute: ActivatedRoute,\n    public dataService: DataService,\n    private camera: Camera,\n    public angularDb: AngularFireDatabase,\n    public loading: LoadingService,\n    private alertController: AlertController,\n    public alertService: AlertService,\n    private actionSheetController: ActionSheetController,\n    private router: Router,\n    public imageService: ImageService,\n    public afstorage: AngularFireStorage\n  ) {\n    // get groupId \n    this.groupId = this.actRoute.snapshot.paramMap.get('groupId')\n\n    // group photo Option \n    this.groupPhotoOption = {\n      quality: 100,\n      targetHeight: 530,\n      targetWidth: 530,\n      destinationType: this.camera.DestinationType.DATA_URL,\n      encodingType: this.camera.EncodingType.JPEG,\n      correctOrientation: true,\n      allowEdit: true\n    }\n  }\n\n  ngOnInit() {\n    //get the member length\n    this.dataService.members(this.groupId).valueChanges().subscribe((length) => {\n      this.members = length.length;\n    })\n\n    // list the image order by image\n    this.getGroupGallery()\n\n    // list image base image type\n    this.dataService.groups(this.groupId).valueChanges().subscribe((group) => {\n      this.group = group;\n      if (group.admin) {\n        let index = _.indexOf(group.admin, firebase.auth().currentUser.uid);\n        if (index > - 1) {\n          this.isAdmin = true;\n        }\n      }\n\n      // list the member from the group member\n      if (group.members) {\n        group.members.forEach((memberId) => {\n          this.dataService.getUser(memberId).valueChanges().subscribe((member) => {\n            this.addUpdateOrRemoveMember(member);\n          });\n        });\n      }\n    });\n    //let get the user details\n    this.dataService.getCurrentUser(firebase.auth().currentUser.uid).valueChanges().subscribe((user) => {\n      this.user = user;\n    })\n\n  }\n\n  // if is Admin or not\n  isAdminOrNotAdmin(member) {\n    let index = _.indexOf(this.group.admin, member.userId);\n    if (index > -1) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  // get post timeline for the gallery\n  getGroupGallery() {\n    this.dataService.groupImage(this.groupId).valueChanges().subscribe((post) => {\n      this.Gallery = []\n      this.imageCount = post.length;\n      post.forEach((timeline) => {\n        let tempData = <any>{};\n        tempData = timeline;\n        this.Gallery.unshift(tempData);\n      })\n    })\n  }\n\n  // let create  a assign the admin member\n  async assignAdmin(member) {\n    if (this.user.userId != member.userId) {\n      if (this.isAdmin && this.user.userId !== member.userId) {\n        if (this.isAdminOrNotAdmin(member)) {\n          const actionSheet = await this.actionSheetController.create({\n            buttons: [\n              {\n                text: 'Remove Admin',\n                handler: () => {\n                  this.loading.show();\n                  let index = _.indexOf(this.group.admin, member.userId);\n                  if (index >= 0) {\n                    this.group.admin.splice(index, 1);\n                    this.dataService.groups(this.groupId).update({\n                      admin: this.group.admin,\n                    }).then(() => {\n                      firebase.database().ref('groups').child(this.groupId).child('messages').push({\n                        date: new Date().toString(),\n                        sender: this.user.userId,\n                        type: 'system',\n                        message: this.user.nikeName + ' has removed ' + member.nikeName + ' as admin.',\n                        icon: 'person-remove'\n                      }).then((sucess) => {\n                        let key = sucess.key\n                        for (let i = 0; i < this.group.members.length; i++) {\n                          firebase.database().ref('accounts').child(this.group.members[i]).child('groups').child(this.groupId).child('messagesRead').push({\n                            key: key\n                          })\n                        }\n                      }).then(() => {\n                        // Back.\n                        this.loading.hide();\n                      })\n                    });\n                  } else {\n                    this.loading.hide();\n                    this.alertService.showAlert('Failed', \"Member not admin.\")\n                  }\n                },\n              },\n              {\n                // it invoke the message chat page\n                text: 'Message ' + member.nikeName,\n                handler: () => {\n                  this.router.navigate(['/do-chat', { 'userId': member.userId }])\n                }\n              },\n              {\n\n                text: 'View ' + member.nikeName,\n                handler: () => {\n                  this.router.navigate(['/do-chat', { 'userId': member.userId }])\n                }\n              },\n              {\n                text: 'Cancel',\n                role: 'cancel',\n                handler: () => { }\n              }\n            ]\n          })\n          actionSheet.present();\n        } else {\n          const actionSheet = await this.actionSheetController.create({\n            buttons: [\n              {\n                text: 'Make Admin',\n                role: 'share',\n                handler: () => {\n                  this.loading.show();\n                  let index = _.indexOf(this.group.admin, member.userId);\n                  if (index < 0) {\n                    let _tempAdmin = this.group.admin;\n                    _tempAdmin.push(member.userId)\n                    this.dataService.groups(this.groupId).update({\n                      admin: _tempAdmin,\n                    }).then(() => {\n                      // this handle thne message page send chat notifation\n                      firebase.database().ref('groups').child(this.groupId).child('messages').push({\n                        date: new Date().toString(),\n                        sender: this.user.userId,\n                        type: 'system',\n                        message: this.user.nikeName + ' has make ' + member.nikeName + ' as admin.',\n                        icon: 'person-add'\n                      }).then((sucess) => {\n                        let key = sucess.key\n                        for (let i = 0; i < this.group.members.length; i++) {\n                          firebase.database().ref('accounts').child(this.group.members[i]).child('groups').child(this.groupId).child('messagesRead').push({\n                            key: key\n                          })\n                        }\n                      }).then(() => {\n                        // Back.\n                        this.loading.hide();\n                      })\n\n                    });\n                  } else {\n                    this.loading.hide();\n                    this.alertService.showAlert('Failed', \"Member alerday admin.\")\n                  }\n\n                }\n              },\n              {\n                text: 'Message ' + member.nikeName,\n                handler: () => {\n                  this.router.navigate(['/do-chat', { 'userId': member.userId }])\n                }\n              },\n              {\n                text: 'View ' + member.nikeName,\n                handler: () => {\n                  this.router.navigate(['/do-chat', { 'userId': member.userId }])\n                }\n              },\n              {\n                text: 'Cancel',\n                role: 'cancel',\n                handler: () => { }\n              }\n            ]\n          })\n          actionSheet.present();\n        }\n\n      } else {\n        const actionSheet = await this.actionSheetController.create({\n          buttons: [\n            {\n              text: 'Message ' + member.nikeName,\n              handler: () => {\n                this.router.navigate(['/do-chat', { 'userId': member.userId }])\n              }\n            },\n            {\n              text: 'View ' + member.nikeName,\n              handler: () => {\n                this.router.navigate(['/do-chat', { 'userId': member.userId }])\n              }\n            },\n            {\n              text: 'Cancel',\n              role: 'cancel',\n              handler: () => { }\n            }\n          ]\n        })\n        actionSheet.present();\n      }\n    }\n\n  }\n\n  // Get names of the members to be added to the group.\n  // Check if user exists in the group then add/update user.\n  // If the user has already left the group, remove user from the list.\n  addUpdateOrRemoveMember(member) {\n    if (this.group) {\n      if (this.group.members.indexOf(member.userId) > -1) {\n        // User exists in the group.\n        if (!this.groupMembers) {\n          this.groupMembers = [member];\n        } else {\n          var index = -1;\n          for (var i = 0; i < this.groupMembers.length; i++) {\n            if (this.groupMembers[i].userId == member.userId) {\n              index = i;\n            }\n          }\n          // Add/Update User.\n          if (index > -1) {\n            this.groupMembers[index] = member;\n          } else {\n            this.groupMembers.push(member);\n          }\n        }\n      } else {\n        // User already left the group, remove member from list.\n        var index = -1;\n        for (var i = 0; i < this.groupMembers.length; i++) {\n          if (this.groupMembers[i].userId == member.userId) {\n            index = i;\n          }\n        }\n        if (index > -1) {\n          this.groupMembers.splice(index, 1);\n        }\n      }\n    }\n  }\n\n  //handel ot delete the groups\n  async deleteGroup() {\n    const alert = await this.alertController.create({\n      header: ' Confirm Delete',\n      message: \"Are you sure you want delete this group\",\n      buttons: [\n        {\n          text: 'Cancel',\n        },\n        {\n          text: 'Delete',\n          handler: (data) => {\n            // Delete group image.\n            this.angularDb.object('/accounts/' + firebase.auth().currentUser.uid + '/groups/' + this.groupId).remove().then(() => {\n              this.dataService.groups(this.groupId).remove();\n            });\n          }\n        }\n      ]\n    })\n    alert.present();\n  }\n\n\n\n  async presentAlertConfirm() {\n    const alert = await this.alertController.create({\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel',\n          cssClass: 'secondary',\n          handler: () => {\n          }\n        }, {\n          text: 'Okay',\n          handler: () => {\n          }\n        }\n      ]\n    });\n    await alert.present();\n  }\n\n\n  // change the group Name\n  changeGroupInfoName() {\n    // pass the parameter is name\n    let name = 'name'\n    // route to the page to the group edite\n    this.router.navigate(['/group-info-edite', { 'groupId': this.groupId, 'name': name }])\n  }\n  // change the group decription\n  changeGroupInfoDec() {\n    // pass the parameter is dec means description\n    let name = 'dec'\n    // route to the page to the group edite\n    this.router.navigate(['/group-info-edite', { 'groupId': this.groupId, 'name': name }])\n  }\n\n  //Set the photo \n  async changeGroupPhoto() {\n    const actionSheet = await this.actionSheetController.create({\n      header: 'Select Group Picture',\n      buttons: [\n        {\n          text: 'Camera',\n          icon: 'camera',\n          handler: () => {\n            this.loading.show();\n            this.imageService.setGroupPhotoProfile(this.groupId, this.camera.PictureSourceType.CAMERA).then((group) => {\n              this.dataService.groups(this.groupId).update({\n                img: group,\n              }).then(() => {\n                // then let add to systme massage can any one see in the group\n                firebase.database().ref('groups').child(this.groupId).child('messages').push({\n                  date: new Date().toString(),\n                  userId: firebase.auth().currentUser.uid,\n                  type: 'system',\n                  message: this.user.nikeName + ' has changed the group photo.',\n                  icon: 'camera'\n                }).then((sucess) => {\n                  let key = sucess.key\n                  for (let i = 0; i < this.group.members.length; i++) {\n                    firebase.database().ref('accounts').child(this.group.members[i]).child('groups').child(this.groupId).child('messagesRead').push({\n                      key: key\n                    })\n                  }\n                  this.loading.hide();\n                  this.alertService.showGroupUpdatedMessage();\n                }).catch((error) => {\n                  this.loading.hide();\n                  this.alertService.showErrorMessage('group/error-update-group');\n                })\n              })\n            })\n          }\n        },\n        {\n          text: 'Gallery',\n          icon: 'images',\n          handler: () => {\n            this.loading.show();\n            this.imageService.setGroupPhotoProfile(this.groupId, this.camera.PictureSourceType.PHOTOLIBRARY).then((group) => {\n              this.dataService.groups(this.groupId).update({\n                img: group,\n              }).then(() => {\n                // then let add to systme massage can any one see in the group\n                firebase.database().ref('groups').child(this.groupId).child('messages').push({\n                  date: new Date().toString(),\n                  userId: firebase.auth().currentUser.uid,\n                  type: 'system',\n                  message: this.user.nikeName + ' has changed the group photo.',\n                  icon: 'camera'\n                }).then((sucess) => {\n                  let key = sucess.key;\n                  for (let i = 0; i < this.group.members.length; i++) {\n                    firebase.database().ref('accounts').child(this.group.members[i]).child('groups').child(this.groupId).child('messagesRead').push({\n                      key: key\n                    })\n                  }\n                  this.loading.hide();\n                  this.alertService.showGroupUpdatedMessage();\n                }).catch((error) => {\n                  this.loading.hide();\n                  this.alertService.showErrorMessage('group/error-update-group');\n                })\n              })\n            })\n\n          }\n        }, {\n          text: 'Cancel',\n          icon: 'help-circle',\n          role: 'cancel',\n          handler: () => {\n\n          }\n        }]\n    });\n    await actionSheet.present();\n  }\n\n\n  //handel the leave the gr\\oups\n  async exit() {\n    const alert = await this.alertController.create({\n      header: 'Confirm Leave',\n      message: 'Are you sure you want to leave this group?',\n      buttons: [\n        {\n          text: 'Cancel',\n          handler: () => { }\n        },\n        {\n          text: 'Leave',\n          handler: () => {\n            this.loading.show();\n            // Remove member from group.\n            this.group.members.splice(this.group.members.indexOf(this.user.userId), 1);\n            this.dataService.groups(this.groupId).update({\n              members: this.group.members,\n            }).then(() => {\n              // Add system message.\n              firebase.database().ref('groups').child(this.groupId).child('messages').push({\n                date: new Date().toString(),\n                sender: firebase.auth().currentUser.uid,\n                type: 'system',\n                message: this.user.nikeName + ' has left this group.',\n                icon: 'exit-outline'\n              }).then((sucess) => {\n                let key = sucess.key\n                for (let i = 0; i < this.group.members.length; i++) {\n                  firebase.database().ref('accounts').child(this.group.members[i]).child('groups').child(this.groupId).child('messagesRead').push({\n                    key: key\n                  }).then(() => {\n                    this.deleteConversation();\n                  })\n                }\n                // Remove group from user's group list.\n                this.dataService.accountsGroups(this.user.userId).valueChanges().pipe(take(1)).subscribe((groups) => {\n                  groups.splice(groups.indexOf(this.groupId), 1);\n                  this.router.navigateByUrl('/home')\n                })\n              }).catch((error) => {\n                this.loading.hide();\n                this.alertService.showErrorMessage('group/error-leave-group');\n              })\n            })\n          }\n        }\n      ]\n    })\n    alert.present()\n  }\n  // this will delete the conversation content;\n  async deleteConversation() {\n    await this.angularDb.database.ref('conversations').child(firebase.auth().currentUser.uid).orderByChild('key').equalTo(this.groupId).once('value', snap => {\n      var res = snap.val();\n      if (res != null) {\n        let store = Object.keys(res)\n        this.angularDb.database.ref('conversations').child(firebase.auth().currentUser.uid).child(store[0]).remove();\n      }\n    })\n  }\n\n  // naviget to the members pages\n  addMembers() {\n    this.router.navigate(['/addmembers', { 'Id': this.groupId }])\n  }\n\n  // change the group photo\n  async changeGroupInfoPhoto() {\n    const actionSheet = await this.actionSheetController.create({\n      header: 'Select Group Picture',\n      buttons: [\n        {\n          text: 'Camera',\n          icon: 'camera',\n          handler: () => {\n            this.loading.show();\n            this.uploadGroupPhotoMessage(this.groupId, this.camera.PictureSourceType.CAMERA).then((group) => {\n              this.dataService.groups(this.groupId).update({\n                img: group,\n              }).then(() => {\n                // then let add to systme massage can any one see in the group\n                firebase.database().ref('groups').child(this.groupId).child('messages').push({\n                  date: new Date().toString(),\n                  userId: firebase.auth().currentUser.uid,\n                  type: 'system',\n                  message: this.user.nikeName + ' has changed the group photo.',\n                  icon: 'camera'\n                }).then((sucess) => {\n                  let key = sucess.key\n                  for (let i = 0; i < this.group.members.length; i++) {\n                    firebase.database().ref('accounts').child(this.group.members[i]).child('groups').child(this.groupId).child('messagesRead').push({\n                      key: key\n                    })\n                  }\n                  this.loading.hide();\n                  this.alertService.showGroupUpdatedMessage();\n                }).catch((error) => {\n                  this.loading.hide();\n                  this.alertService.showErrorMessage('group/error-update-group');\n                })\n              })\n            })\n          }\n        },\n        {\n          text: 'Gallery',\n          icon: 'images',\n          handler: () => {\n            this.loading.show();\n            this.uploadGroupPhotoMessage(this.groupId, this.camera.PictureSourceType.PHOTOLIBRARY).then((group) => {\n              this.dataService.groups(this.groupId).update({\n                img: group,\n              }).then(() => {\n                // then let add to systme massage can any one see in the group\n                firebase.database().ref('groups').child(this.groupId).child('messages').push({\n                  date: new Date().toString(),\n                  userId: firebase.auth().currentUser.uid,\n                  type: 'system',\n                  message: this.user.nikeName + ' has changed the group photo.',\n                  icon: 'camera'\n                }).then((sucess) => {\n                  let key = sucess.key;\n                  for (let i = 0; i < this.group.members.length; i++) {\n                    firebase.database().ref('accounts').child(this.group.members[i]).child('groups').child(this.groupId).child('messagesRead').push({\n                      key: key\n                    })\n                  }\n                  this.loading.hide();\n                  this.alertService.showGroupUpdatedMessage();\n                }).catch((error) => {\n                  this.loading.hide();\n                  this.alertService.showErrorMessage('group/error-update-group');\n                })\n              })\n            })\n          }\n        }, {\n          text: 'Cancel',\n          icon: 'help-circle',\n          role: 'cancel',\n          handler: () => {\n\n          }\n        }]\n    });\n    await actionSheet.present();\n  }\n\n\n  // this handle the upload to the firebase \n  // it handle the selection from the image after will be upload to firebase storage \n  // also will be return the download url\n  uploadGroupPhotoMessage(groupId, sourceType) {\n    return new Promise((resolve) => {\n      this.groupPhotoOption.sourceType = sourceType;\n      this.loading.show();\n      this.camera.getPicture(this.groupPhotoOption).then((imageData) => {\n        let url = \"data:image/jpeg;base64,\" + imageData;\n        let imgBlob = this.imgURItoBlob(url);\n        let metadata = {\n          'contentType': imgBlob.type\n        };\n        const ref = this.afstorage.ref('/groupsMessage/' + groupId + this.generateFilename())\n        const task = ref.put(imgBlob, metadata)\n        task.snapshotChanges().pipe(\n          finalize(async () => {\n            ref.getDownloadURL().subscribe((url) => {\n              resolve(url);\n              this.loading.hide();\n            })\n\n          })\n        ).subscribe()\n      })\n\n    })\n  }\n\n  // convert the image to the blob\n  imgURItoBlob(dataURI) {\n    var binary = atob(dataURI.split(',')[1]);\n    var mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];\n    var array = [];\n    for (var i = 0; i < binary.length; i++) {\n      array.push(binary.charCodeAt(i));\n    }\n    return new Blob([new Uint8Array(array)], {\n      type: mimeString\n    });\n  }\n\n  //generate the random name return to jpg\n  generateFilename() {\n    var length = 8;\n    var text = \"\";\n    var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n    for (var i = 0; i < length; i++) {\n      text += possible.charAt(Math.floor(Math.random() * possible.length));\n    }\n    return text + \".jpg\";\n  }\n\n}\n"]}