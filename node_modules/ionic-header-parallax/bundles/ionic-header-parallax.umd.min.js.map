{"version":3,"sources":["ng://ionic-header-parallax/lib/parallax.directive.ts","ng://ionic-header-parallax/lib/ionic-header-parallax.module.ts"],"names":["ParallaxDirective","headerRef","renderer","this","maximumHeight","prototype","ngAfterViewInit","_this","setTimeout","initElements","initStyles","initEvents","parentElement","nativeElement","header","toolbar","querySelector","Error","ionTitle","toolbarBackground","shadowRoot","barButtons","ionContent","scrollContent","imageOverlay","createElement","addClass","colorOverlay","appendChild","overlayTitle","cloneNode","toolbarTitle","setStyle","headerHeight","clientHeight","ticking","parseFloat","toString","headerMinHeight","offsetHeight","scrollContentPaddingTop","window","getComputedStyle","paddingTop","replace","originalToolbarBgColor","backgroundColor","titleColor","expandedColor","imageUrl","Array","from","children","forEach","btn","setAttribute","addEventListener","e","requestAnimationFrame","updateElasticHeader","scrollTop","translateAmt","scaleAmt","progress","Math","max","targetHeight","append","Directive","args","selector","ElementRef","Renderer2","Input","IonicHeaderParallaxModule","NgModule","declarations","imports","exports"],"mappings":"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","sourcesContent":["import { Directive, ElementRef, Input, Renderer2, AfterViewInit } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: 'ion-header[parallax]'\r\n})\r\nexport class ParallaxDirective implements AfterViewInit {\r\n  @Input() imageUrl: string;\r\n  @Input() expandedColor: string;\r\n  @Input() titleColor: string;\r\n  @Input() maximumHeight = 300;\r\n\r\n  header: HTMLElement;\r\n  toolbar: HTMLElement;\r\n  toolbarBackground: HTMLElement;\r\n  imageOverlay: HTMLElement;\r\n  colorOverlay: HTMLElement;\r\n  barButtons: HTMLElement;\r\n  scrollContent: HTMLElement;\r\n  headerHeight: any;\r\n  headerMinHeight: number;\r\n  translateAmt: any;\r\n  scaleAmt: any;\r\n  scrollTop: any;\r\n  lastScrollTop: any;\r\n  ticking: any;\r\n  originalToolbarBgColor: string;\r\n  overlayTitle: HTMLElement;\r\n  ionTitle: HTMLElement;\r\n  overlayButtons: HTMLElement[];\r\n  scrollContentPaddingTop;\r\n\r\n  constructor(public headerRef: ElementRef<HTMLElement>, public renderer: Renderer2) {\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    setTimeout(() => {\r\n      this.initElements();\r\n      this.initStyles();\r\n      this.initEvents();\r\n    }, 100);\r\n  }\r\n\r\n  initElements() {\r\n    const parentElement = this.headerRef.nativeElement.parentElement;\r\n    this.header = this.headerRef.nativeElement;\r\n\r\n    this.toolbar = this.header.querySelector('ion-toolbar');\r\n    if (!this.toolbar) { throw new Error('Parallax directive requires a toolbar or navbar element on the page to work.'); }\r\n    this.ionTitle = this.toolbar.querySelector('ion-title');\r\n    this.toolbarBackground = this.toolbar.shadowRoot.querySelector('.toolbar-background');\r\n\r\n    this.barButtons = this.headerRef.nativeElement.querySelector('ion-buttons');\r\n    const ionContent = parentElement.querySelector('ion-content');\r\n    this.scrollContent = ionContent.shadowRoot.querySelector('.inner-scroll');\r\n    if (!this.scrollContent) { throw new Error('Parallax directive requires an <ion-content> element on the page to work.'); }\r\n\r\n    // Create image overlay\r\n    this.imageOverlay = this.renderer.createElement('div');\r\n    this.renderer.addClass(this.imageOverlay, 'image-overlay');\r\n\r\n    this.colorOverlay = this.renderer.createElement('div');\r\n    this.renderer.addClass(this.colorOverlay, 'color-overlay');\r\n\r\n    this.colorOverlay.appendChild(this.imageOverlay);\r\n    this.header.appendChild(this.colorOverlay);\r\n\r\n    // Copy title and buttons\r\n    this.overlayTitle = this.ionTitle && this.ionTitle.cloneNode(true) as HTMLElement;\r\n    if (this.overlayTitle) {\r\n      this.renderer.addClass(this.overlayTitle, 'parallax-title');\r\n      setTimeout(() => {\r\n        const toolbarTitle = this.overlayTitle.shadowRoot.querySelector('.toolbar-title');\r\n        this.renderer.setStyle(toolbarTitle, 'pointer-events', 'unset');\r\n      });\r\n    }\r\n\r\n    if (this.overlayTitle) { this.imageOverlay.appendChild(this.overlayTitle); }\r\n    if (this.barButtons) { this.imageOverlay.appendChild(this.barButtons); }\r\n  }\r\n\r\n  initStyles() {\r\n    this.headerHeight = this.scrollContent.clientHeight;\r\n    this.ticking = false;\r\n\r\n    if (!this.scrollContent || !toolbar) { return; }\r\n\r\n    // fetch styles\r\n    this.maximumHeight = parseFloat(this.maximumHeight.toString());\r\n    this.headerMinHeight = this.toolbar.offsetHeight;\r\n    this.scrollContentPaddingTop = window.getComputedStyle(this.scrollContent, null).paddingTop.replace('px', '');\r\n    this.scrollContentPaddingTop = parseFloat(this.scrollContentPaddingTop);\r\n    this.originalToolbarBgColor = window.getComputedStyle(this.toolbarBackground, null).backgroundColor;\r\n\r\n    // header and title\r\n    this.renderer.setStyle(this.header, 'position', 'relative');\r\n    if (this.overlayTitle) {\r\n      this.renderer.setStyle(this.overlayTitle, 'color', this.titleColor);\r\n      this.renderer.setStyle(this.overlayTitle, 'position', 'absolute');\r\n      this.renderer.setStyle(this.overlayTitle, 'width', '100%');\r\n      this.renderer.setStyle(this.overlayTitle, 'height', '100%');\r\n      this.renderer.setStyle(this.overlayTitle, 'text-align', 'center');\r\n    }\r\n\r\n    // color overlay\r\n    this.renderer.setStyle(this.colorOverlay, 'background-color', this.originalToolbarBgColor);\r\n    this.renderer.setStyle(this.colorOverlay, 'height', `${this.maximumHeight}px`);\r\n    this.renderer.setStyle(this.colorOverlay, 'position', 'absolute');\r\n    this.renderer.setStyle(this.colorOverlay, 'top', `${-this.headerMinHeight * 0}px`);\r\n    this.renderer.setStyle(this.colorOverlay, 'left', '0');\r\n    this.renderer.setStyle(this.colorOverlay, 'width', '100%');\r\n    this.renderer.setStyle(this.colorOverlay, 'z-index', '10');\r\n    this.renderer.setStyle(this.colorOverlay, 'pointer-events', 'none');\r\n\r\n    // image overlay\r\n    this.renderer.setStyle(this.imageOverlay, 'background-color', this.expandedColor);\r\n    this.renderer.setStyle(this.imageOverlay, 'background-image', `url(${this.imageUrl || ''})`);\r\n    this.renderer.setStyle(this.imageOverlay, 'height', `100%`);\r\n    this.renderer.setStyle(this.imageOverlay, 'width', '100%');\r\n    this.renderer.setStyle(this.imageOverlay, 'pointer-events', 'none');\r\n    this.renderer.setStyle(this.imageOverlay, 'background-size', 'cover');\r\n    this.renderer.setStyle(this.imageOverlay, 'background-position', 'center');\r\n\r\n    // .toolbar-background\r\n    this.renderer.setStyle(this.toolbarBackground, 'background-color', this.originalToolbarBgColor);\r\n\r\n    // .bar-buttons\r\n    if (this.barButtons) {\r\n      this.renderer.setStyle(this.barButtons, 'pointer-events', 'all');\r\n      Array.from(this.barButtons.children).forEach(btn => {\r\n        this.renderer.setStyle(btn, 'color', this.titleColor);\r\n      });\r\n    }\r\n\r\n    // .scroll-content\r\n    if (this.scrollContent) {\r\n      this.renderer.setAttribute(this.scrollContent, 'parallax', '');\r\n      this.renderer.setStyle(this.scrollContent, 'padding-top',\r\n        `${this.maximumHeight + this.scrollContentPaddingTop - this.headerMinHeight}px`);\r\n    }\r\n  }\r\n\r\n  initEvents() {\r\n    window.addEventListener('resize', () => {\r\n      this.headerHeight = this.scrollContent.clientHeight;\r\n    }, false);\r\n\r\n    if (this.scrollContent) {\r\n      this.scrollContent.addEventListener('scroll', (e) => {\r\n\r\n        if (!this.ticking) {\r\n          window.requestAnimationFrame(() => {\r\n            this.updateElasticHeader();\r\n          });\r\n        }\r\n        this.ticking = true;\r\n      });\r\n    }\r\n  }\r\n\r\n  updateElasticHeader() {\r\n    if (!this.scrollContent || !toolbar) { return; }\r\n\r\n    this.scrollTop = this.scrollContent.scrollTop;\r\n    if (this.scrollTop >= 0) {\r\n      this.translateAmt = this.scrollTop / 2;\r\n      this.scaleAmt = 1;\r\n    } else {\r\n      this.translateAmt = 0;\r\n      this.scaleAmt = -this.scrollTop / this.headerHeight + 1;\r\n    }\r\n\r\n    // Parallax total progress\r\n    this.headerMinHeight = this.toolbar.offsetHeight;\r\n    let progress = (this.maximumHeight - this.scrollTop - this.headerMinHeight) / (this.maximumHeight - this.headerMinHeight);\r\n    progress = Math.max(progress, 0);\r\n\r\n    // ion-header: set height\r\n    let targetHeight = this.maximumHeight - this.scrollTop;\r\n    targetHeight = Math.max(targetHeight, this.headerMinHeight);\r\n\r\n    // .toolbar-background: change color\r\n    this.renderer.setStyle(this.imageOverlay, 'height', `${targetHeight}px`);\r\n    this.renderer.setStyle(this.imageOverlay, 'opacity', `${progress}`);\r\n    this.renderer.setStyle(this.colorOverlay, 'height', `${targetHeight}px`);\r\n    this.renderer.setStyle(this.colorOverlay, 'opacity', targetHeight > this.headerMinHeight ? '1' : '0');\r\n    this.renderer.setStyle(this.toolbarBackground, 'background-color',\r\n      targetHeight > this.headerMinHeight ? 'transparent' : this.originalToolbarBgColor);\r\n\r\n    // .bar-buttons\r\n    if (this.barButtons) {\r\n      if (targetHeight > this.headerMinHeight) {\r\n        this.imageOverlay.append(this.barButtons);\r\n        Array.from(this.barButtons.children).forEach(btn => {\r\n          this.renderer.setStyle(btn, 'color', this.titleColor);\r\n        });\r\n      } else {\r\n        this.toolbar.append(this.barButtons);\r\n        Array.from(this.barButtons.children).forEach(btn => {\r\n          this.renderer.setStyle(btn, 'color', 'unset');\r\n        });\r\n      }\r\n    }\r\n\r\n    this.ticking = false;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { ParallaxDirective } from './parallax.directive';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ParallaxDirective\r\n  ],\r\n  imports: [\r\n  ],\r\n  exports: [\r\n    ParallaxDirective\r\n  ]\r\n})\r\nexport class IonicHeaderParallaxModule { }\r\n"]}